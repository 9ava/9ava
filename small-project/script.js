// ÌõÑÎ≥¥ Î™©Î°ù (16Í∞ï, images/1.jpg ~ 16.jpg)
const allCandidates = [
  { name: "Í∑§", image: "images/Í∑§.jpeg" },
  { name: "ÎßùÍ≥†Ïä§Ìã¥", image: "images/ÎßùÍ≥†Ïä§Ìã¥.jpeg" },
  { name: "Î©úÎ°†", image: "images/Î©úÎ°†.jpg" },
  { name: "Î¨¥ÌôîÍ≥º", image: "images/Î¨¥ÌôîÍ≥º.png" },
  { name: "Î∞îÎÇòÎÇò", image: "images/Î∞îÎÇòÎÇò.jpg" },
  { name: "Î∞∞", image: "images/Î∞∞.jpg" },
  { name: "Î≥µÏà≠ÏïÑ", image: "images/Î≥µÏà≠ÏïÑ.jpg" },
  { name: "ÏÇ¨Í≥º", image: "images/ÏÇ¨Í≥º.jpg" },
  { name: "ÏàòÎ∞ï", image: "images/ÏàòÎ∞ï.jpg" },
  { name: "Ïï†ÌîåÎßùÍ≥†", image: "images/Ïï†ÌîåÎßùÍ≥†.jpg" },
  { name: "ÏûêÎëê", image: "images/ÏûêÎëê.jpg" },
  { name: "ÏûêÎ™Ω", image: "images/ÏûêÎ™Ω.jpg" },
  { name: "ÌååÏù∏Ïï†Ìîå", image: "images/ÌååÏù∏Ïï†Ìîå.jpg" },
  { name: "ÌååÌååÏïº", image: "images/ÌååÌååÏïº.jpeg" },
  { name: "Ìè¨ÎèÑ", image: "images/Ìè¨ÎèÑ.jpg" },
  { name: "ÌïúÎùºÎ¥â", image: "images/ÌïúÎùºÎ¥â.jpg" }
];

let currentCandidates = [];
let nextRound = [];
let currentIndex = 0;
let round = 16;

let finalRunnerUp = null;
let semiFinalLosers = [];

const leftBox = document.getElementById("left");
const rightBox = document.getElementById("right");
const roundInfo = document.getElementById("round-info");
const finalWinner = document.getElementById("final-winner");
const winnerImg = document.getElementById("winner-img");

function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

function startGame() {
  currentCandidates = shuffle(allCandidates.slice());
  nextRound = [];
  currentIndex = 0;
  round = currentCandidates.length;
  finalRunnerUp = null;
  semiFinalLosers = [];

  document.getElementById("setup-area").style.display = "none";
  document.getElementById("game-area").style.display = "block";
  document.getElementById("result").style.display = "none";

  showMatch();
}

function showMatch() {
  if (currentIndex >= currentCandidates.length) {
    if (nextRound.length === 1) {
      showResult(nextRound[0]);
      return;
    }

    currentCandidates = [...nextRound];
    nextRound = [];
    currentIndex = 0;
    round = currentCandidates.length;
  }

  roundInfo.innerText = `${round}Í∞ï - ${currentIndex / 2 + 1}Î≤àÏß∏ ÎåÄÍ≤∞`;

  const left = currentCandidates[currentIndex];
  const right = currentCandidates[currentIndex + 1];

  leftBox.querySelector("img").src = left.image;
  leftBox.querySelector(".label").innerText = left.name;

  rightBox.querySelector("img").src = right.image;
  rightBox.querySelector(".label").innerText = right.name;

  leftBox.classList.remove("clicked");
  rightBox.classList.remove("clicked");
}

function selectCandidate(side) {
  const selected =
    side === "left"
      ? currentCandidates[currentIndex]
      : currentCandidates[currentIndex + 1];

  const eliminated =
    side === "left"
      ? currentCandidates[currentIndex + 1]
      : currentCandidates[currentIndex];

  if (round === 4) {
    semiFinalLosers.push(eliminated);
  }

  if (round === 2) {
    finalRunnerUp = eliminated;
  }

  document.getElementById(side).classList.add("clicked");

  setTimeout(() => {
    nextRound.push(selected);
    currentIndex += 2;
    showMatch();
  }, 300);
}

function showResult(winner) {
  document.getElementById("game-area").style.display = "none";
  document.getElementById("result").style.display = "block";

  finalWinner.innerText = winner.name;
  winnerImg.src = winner.image;

  const tbody = document.getElementById("ranking-body");
  tbody.innerHTML = "";

  function createRow(rank, person) {
    const tr = document.createElement("tr");
    tr.innerHTML = `
      <td style="padding:8px;">${rank}</td>
      <td style="padding:8px;">${person.name}</td>
      <td style="padding:8px;">
        <img src="${person.image}" alt="${person.name}" style="width: 60px; height: 60px; border-radius: 10px; object-fit: cover;">
      </td>
    `;
    tbody.appendChild(tr);
  }

  createRow("ü•á Ïö∞Ïäπ", winner);
  if (finalRunnerUp) createRow("ü•à Ï§ÄÏö∞Ïäπ", finalRunnerUp);
  semiFinalLosers.forEach(p => createRow("ü•â Í≥µÎèô 3ÏúÑ", p));
}

function restartGame() {
  location.reload();
}
